{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\Desktop\\\\My progects\\\\react-router\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments, getAllQuotes } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this);\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAdded: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Comments, \"F9X652Knza4wvflKQp1u0Gcz3n4=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useCallback","useEffect","useState","classes","NewCommentForm","useParams","useHttp","getAllComments","getAllQuotes","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["C:/Users/Anastasia/Desktop/My progects/react-router/src/components/comments/Comments.js"],"sourcesContent":["import {useCallback, useEffect, useState} from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport {useParams} from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport {getAllComments, getAllQuotes} from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n    const [isAddingComment, setIsAddingComment] = useState(false);\n    const params = useParams();\n\n    const {quoteId} = params;\n    const {sendRequest, status, data: loadedComments} = useHttp(getAllComments)\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [quoteId, sendRequest])\n\n\n    const startAddCommentHandler = () => {\n        setIsAddingComment(true);\n    };\n\n    const addedCommentHandler = useCallback(() => {\n        sendRequest(quoteId)\n    },[sendRequest, quoteId]);\n    let comments;\n    if (status === 'pending') {\n        comments = (<div className='centered'>\n                <LoadingSpinner/>\n            </div>\n        )\n    }\n    if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n        comments = <CommentsList comments={loadedComments}/>\n    }\n    if (status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n        comments = <p className='centered'>No comments were added yet!</p>\n    }\n\n\n        return (\n            <section className={classes.comments}>\n                <h2>User Comments</h2>\n                {!isAddingComment && (\n                    <button className='btn' onClick={startAddCommentHandler}>\n                        Add a Comment\n                    </button>\n                )}\n                {isAddingComment && <NewCommentForm quoteId={quoteId} onAdded={addedCommentHandler}/>}\n                {comments}\n            </section>\n        );\n};\n\nexport default Comments;\n"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,eAA3C;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMY,MAAM,GAAGT,SAAS,EAAxB;EAEA,MAAM;IAACU;EAAD,IAAYD,MAAlB;EACA,MAAM;IAACE,WAAD;IAAcC,MAAd;IAAsBC,IAAI,EAAEC;EAA5B,IAA8Cb,OAAO,CAACC,cAAD,CAA3D;EAEAN,SAAS,CAAC,MAAM;IACZe,WAAW,CAACD,OAAD,CAAX;EACH,CAFQ,EAEN,CAACA,OAAD,EAAUC,WAAV,CAFM,CAAT;;EAKA,MAAMI,sBAAsB,GAAG,MAAM;IACjCP,kBAAkB,CAAC,IAAD,CAAlB;EACH,CAFD;;EAIA,MAAMQ,mBAAmB,GAAGrB,WAAW,CAAC,MAAM;IAC1CgB,WAAW,CAACD,OAAD,CAAX;EACH,CAFsC,EAErC,CAACC,WAAD,EAAcD,OAAd,CAFqC,CAAvC;EAGA,IAAIO,QAAJ;;EACA,IAAIL,MAAM,KAAK,SAAf,EAA0B;IACtBK,QAAQ,gBAAI;MAAK,SAAS,EAAC,UAAf;MAAA,uBACJ,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADI;MAAA;MAAA;MAAA;IAAA,QAAZ;EAIH;;EACD,IAAIL,MAAM,KAAK,WAAX,IAA2BE,cAAc,IAAIA,cAAc,CAACI,MAAf,GAAwB,CAAzE,EAA6E;IACzED,QAAQ,gBAAG,QAAC,YAAD;MAAc,QAAQ,EAAEH;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAX;EACH;;EACD,IAAIF,MAAM,KAAK,WAAX,KAA2B,CAACE,cAAD,IAAmBA,cAAc,CAACI,MAAf,KAA0B,CAAxE,CAAJ,EAA+E;IAC3ED,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX;EACH;;EAGG,oBACI;IAAS,SAAS,EAAEnB,OAAO,CAACmB,QAA5B;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEK,CAACV,eAAD,iBACG;MAAQ,SAAS,EAAC,KAAlB;MAAwB,OAAO,EAAEQ,sBAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHR,EAOKR,eAAe,iBAAI,QAAC,cAAD;MAAgB,OAAO,EAAEG,OAAzB;MAAkC,OAAO,EAAEM;IAA3C;MAAA;MAAA;MAAA;IAAA,QAPxB,EAQKC,QARL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYP,CA9CD;;GAAMX,Q;UAEaN,S,EAGqCC,O;;;KALlDK,Q;AAgDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}