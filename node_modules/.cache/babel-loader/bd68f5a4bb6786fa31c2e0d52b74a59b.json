{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\Desktop\\\\My progects\\\\react-router\\\\src\\\\components\\\\pages\\\\AllQuotes.js\";\nimport React, { Fragment } from 'react';\nimport QuoteItem from \"../quotes/QuoteItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: q1,\n  author: 'Nastya',\n  text: 'Learning React is fun !'\n}, {\n  id: q2,\n  author: 'Anastasiia',\n  text: 'Learning React is great !'\n}];\n\nconst AllQuotes = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["React","Fragment","QuoteItem","DUMMY_QUOTES","id","q1","author","text","q2","AllQuotes","classes","list","props","quotes","map","quote"],"sources":["C:/Users/Anastasia/Desktop/My progects/react-router/src/components/pages/AllQuotes.js"],"sourcesContent":["import React, {Fragment} from 'react';\r\nimport QuoteItem from \"../quotes/QuoteItem\";\r\n\r\nconst DUMMY_QUOTES = [\r\n    {id: q1, author: 'Nastya', text: 'Learning React is fun !'},\r\n    {id: q2, author: 'Anastasiia', text: 'Learning React is great !'},\r\n];\r\n\r\nconst AllQuotes = () => {\r\n    return (\r\n        <Fragment>\r\n            <ul className={classes.list}>\r\n                {props.quotes.map((quote) => (\r\n                    <QuoteItem key={quote.id}\r\n                               id={quote.id}\r\n                               author={quote.author}\r\n                               text={quote.text}/>\r\n                ))}\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AllQuotes;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,YAAY,GAAG,CACjB;EAACC,EAAE,EAAEC,EAAL;EAASC,MAAM,EAAE,QAAjB;EAA2BC,IAAI,EAAE;AAAjC,CADiB,EAEjB;EAACH,EAAE,EAAEI,EAAL;EAASF,MAAM,EAAE,YAAjB;EAA+BC,IAAI,EAAE;AAArC,CAFiB,CAArB;;AAKA,MAAME,SAAS,GAAG,MAAM;EACpB,oBACI,QAAC,QAAD;IAAA,uBACI;MAAI,SAAS,EAAEC,OAAO,CAACC,IAAvB;MAAA,UACKC,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBACd,QAAC,SAAD;QACW,EAAE,EAAEA,KAAK,CAACX,EADrB;QAEW,MAAM,EAAEW,KAAK,CAACT,MAFzB;QAGW,IAAI,EAAES,KAAK,CAACR;MAHvB,GAAgBQ,KAAK,CAACX,EAAtB;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAbD;;KAAMK,S;AAeN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}