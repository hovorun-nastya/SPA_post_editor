{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anastasia\\\\Desktop\\\\My progects\\\\react-router\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push(`$${isSortingAscending ? 'desc' : 'asc'}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort\", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","QuoteItem","classes","useHistory","useLocation","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","sorting","list","map","quote","author","text"],"sources":["C:/Users/Anastasia/Desktop/My progects/react-router/src/components/quotes/QuoteList.js"],"sourcesContent":["import {Fragment} from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    });\n};\n\nconst QuoteList = (props) => {\n    const history = useHistory()\n    const location = useLocation()\n    const queryParams = new URLSearchParams(location.search);\n    const isSortingAscending = queryParams.get('sort') === 'asc';\n    const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n    const changeSortingHandler = () => {\n        history.push(`$${(isSortingAscending ? 'desc' : 'asc')}`);\n    }\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={changeSortingHandler}>Sort\n                    {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,kBAAtC;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACtC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAASC,MAAT,KAAoB;IACnC,IAAIH,SAAJ,EAAe;MACX,OAAOE,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACH,CAFD,MAEO;MACH,OAAOF,MAAM,CAACE,EAAP,GAAYD,MAAM,CAACC,EAAnB,GAAwB,CAAxB,GAA4B,CAAC,CAApC;IACH;EACJ,CANM,CAAP;AAOH,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAMC,OAAO,GAAGX,UAAU,EAA1B;EACA,MAAMY,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EACA,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;EACA,MAAMC,YAAY,GAAGhB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAea,kBAAf,CAA/B;;EACA,MAAMG,oBAAoB,GAAG,MAAM;IAC/BR,OAAO,CAACS,IAAR,CAAc,IAAIJ,kBAAkB,GAAG,MAAH,GAAY,KAAO,EAAvD;EACH,CAFD;;EAGA,oBACI,QAAC,QAAD;IAAA,wBACI;MAAK,SAAS,EAAEjB,OAAO,CAACsB,OAAxB;MAAA,uBACI;QAAQ,OAAO,EAAEF,oBAAjB;QAAA,mBACKH,kBAAkB,GAAG,YAAH,GAAkB,WADzC;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAI,SAAS,EAAEjB,OAAO,CAACuB,IAAvB;MAAA,UACKJ,YAAY,CAACK,GAAb,CAAkBC,KAAD,iBACd,QAAC,SAAD;QAEI,EAAE,EAAEA,KAAK,CAAChB,EAFd;QAGI,MAAM,EAAEgB,KAAK,CAACC,MAHlB;QAII,IAAI,EAAED,KAAK,CAACE;MAJhB,GACSF,KAAK,CAAChB,EADf;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH,CA3BD;;GAAMC,S;UACcT,U,EACCC,W;;;KAFfQ,S;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}